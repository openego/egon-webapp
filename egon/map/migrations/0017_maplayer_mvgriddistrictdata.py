# Generated by Django 3.2.18 on 2023-05-09 08:20

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('map', '0016_auto_20230505_0651'),
    ]

    operations = [
        migrations.CreateModel(
            name='MapLayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(choices=[('2035', '2035'), ('100RE', '100RE')], default='2035', max_length=5)),
                ('layer_identifier', models.CharField(max_length=64)),
                ('layer_name', models.CharField(max_length=64)),
                ('choropleth_field', models.CharField(max_length=64)),
                ('color_palette', models.CharField(blank=True, max_length=64, null=True)),
                ('num_colors', models.IntegerField(blank=True, null=True)),
                ('popup_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), size=None)),
                ('popup_title', models.CharField(max_length=64)),
                ('popup_description', models.CharField(max_length=1024)),
                ('display_category', models.CharField(choices=[('demand', 'Demand'), ('supply', 'Supply'), ('grids', 'Grids'), ('data_model', 'Data Model')], default='demand', max_length=16)),
            ],
            options={
                'verbose_name': 'Map Layer',
                'verbose_name_plural': 'Map Layers',
            },
        ),
        migrations.CreateModel(
            name='MVGridDistrictData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326)),
                ('area', models.FloatField(null=True)),
                ('demand_electricity_households_2035_sum', models.FloatField(null=True, verbose_name='Annual Demand (MWh)')),
                ('demand_electricity_households_2035_min', models.FloatField(null=True, verbose_name='Minimal hourly demand (MW)')),
                ('demand_electricity_households_2035_max', models.FloatField(null=True, verbose_name='Maximal hourly demand (MW)')),
                ('demand_electricity_households_100RE_sum', models.FloatField(null=True, verbose_name='Annual Demand (MWh)')),
                ('demand_electricity_households_100RE_min', models.FloatField(null=True, verbose_name='Minimal hourly demand (MW)')),
                ('demand_electricity_households_100RE_max', models.FloatField(null=True, verbose_name='Maximal hourly demand (MW)')),
                ('transport_mit_number_of_evs_2035_ev_count', models.IntegerField(null=True, verbose_name='Number of electric vehicles')),
                ('transport_mit_number_of_evs_2035_bev_mini', models.IntegerField(null=True, verbose_name='Number of compact EV')),
                ('transport_mit_number_of_evs_2035_bev_medium', models.IntegerField(null=True, verbose_name='Number of mid-range EV')),
                ('transport_mit_number_of_evs_2035_bev_luxury', models.IntegerField(null=True, verbose_name='Number of luxury-class EV')),
                ('transport_mit_number_of_evs_2035_phev_mini', models.IntegerField(null=True, verbose_name='Number of compact PHEV')),
                ('transport_mit_number_of_evs_2035_phev_medium', models.IntegerField(null=True, verbose_name='Number of mid-range PHEV')),
                ('transport_mit_number_of_evs_2035_phev_luxury', models.IntegerField(null=True, verbose_name='Number of luxury-class PHEV')),
                ('transport_mit_number_of_evs_100RE_ev_count', models.IntegerField(null=True, verbose_name='Number of electric vehicles')),
                ('transport_mit_number_of_evs_100RE_bev_mini', models.IntegerField(null=True, verbose_name='Number of compact EV')),
                ('transport_mit_number_of_evs_100RE_bev_medium', models.IntegerField(null=True, verbose_name='Number of mid-range EV')),
                ('transport_mit_number_of_evs_100RE_bev_luxury', models.IntegerField(null=True, verbose_name='Number of luxury-class EV')),
                ('transport_mit_number_of_evs_100RE_phev_mini', models.IntegerField(null=True, verbose_name='Number of compact PHEV')),
                ('transport_mit_number_of_evs_100RE_phev_medium', models.IntegerField(null=True, verbose_name='Number of mid-range PHEV')),
                ('transport_mit_number_of_evs_100RE_phev_luxury', models.IntegerField(null=True, verbose_name='Number of luxury-class PHEV')),
                ('supply_pv_ground_mounted_installed_capacity_2035_el_capacity', models.FloatField(null=True, verbose_name='Installed capacity (MW)')),
                ('supply_pv_ground_mounted_installed_capacity_2035_unit_count', models.IntegerField(null=True, verbose_name='Number of power plants')),
                ('supply_pv_ground_mounted_installed_capacity_100RE_el_capacity', models.FloatField(null=True, verbose_name='Installed capacity (MW)')),
                ('supply_pv_ground_mounted_installed_capacity_100RE_unit_count', models.IntegerField(null=True, verbose_name='Number of power plants')),
            ],
        ),
    ]
