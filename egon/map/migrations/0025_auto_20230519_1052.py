# Generated by Django 3.2.18 on 2023-05-19 10:52

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('map', '0024_alter_maplayer_scenario'),
    ]

    operations = [
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='demand_electricity_households_100RE_max',
            new_name='demand_electricity_households_100re_max',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='demand_electricity_households_100RE_min',
            new_name='demand_electricity_households_100re_min',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='demand_electricity_households_100RE_sum',
            new_name='demand_electricity_households_100re_sum',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='supply_pv_ground_mounted_installed_capacity_100RE_el_capacity',
            new_name='supply_pv_ground_mounted_installed_capacity_100re_el_capacity',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='supply_pv_ground_mounted_installed_capacity_100RE_unit_count',
            new_name='supply_pv_ground_mounted_installed_capacity_100re_unit_count',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='transport_mit_number_of_evs_100RE_bev_luxury',
            new_name='transport_mit_number_of_evs_100re_bev_luxury',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='transport_mit_number_of_evs_100RE_bev_medium',
            new_name='transport_mit_number_of_evs_100re_bev_medium',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='transport_mit_number_of_evs_100RE_bev_mini',
            new_name='transport_mit_number_of_evs_100re_bev_mini',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='transport_mit_number_of_evs_100RE_ev_count',
            new_name='transport_mit_number_of_evs_100re_ev_count',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='transport_mit_number_of_evs_100RE_phev_luxury',
            new_name='transport_mit_number_of_evs_100re_phev_luxury',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='transport_mit_number_of_evs_100RE_phev_medium',
            new_name='transport_mit_number_of_evs_100re_phev_medium',
        ),
        migrations.RenameField(
            model_name='mvgriddistrictdata',
            old_name='transport_mit_number_of_evs_100RE_phev_mini',
            new_name='transport_mit_number_of_evs_100re_phev_mini',
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='demand_population_2035_sum',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='demand_transport_mit_demand_100re_annual_demand',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='demand_transport_mit_demand_100re_max',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='demand_transport_mit_demand_100re_min',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='demand_transport_mit_demand_2035_annual_demand',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='demand_transport_mit_demand_2035_max',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='demand_transport_mit_demand_2035_min',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='flex_pot_electricity_electromobility_100re_charging_demand',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='flex_pot_electricity_electromobility_100re_flex_demand',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='flex_pot_electricity_electromobility_100re_flex_share',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='flex_pot_electricity_electromobility_2035_charging_demand',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='flex_pot_electricity_electromobility_2035_flex_demand',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='flex_pot_electricity_electromobility_2035_flex_share',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_other_biomass_fired_power_plants_2035_el_capacity',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_other_biomass_fired_power_plants_2035_unit_count',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_other_gas_fired_power_plants_2035_el_capacity',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_other_gas_fired_power_plants_2035_unit_count',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_other_hydro_2035_el_capacity',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_other_hydro_2035_unit_count',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_other_other_power_plants_2035_el_capacity',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_other_other_power_plants_2035_unit_count',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_pv_roof_top_installed_capacity_100re_el_capacity',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_pv_roof_top_installed_capacity_100re_unit_count',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_pv_roof_top_installed_capacity_2035_el_capacity',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_pv_roof_top_installed_capacity_2035_unit_count',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_pv_roof_top_potential_production_100re_feedin',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_pv_roof_top_potential_production_2035_feedin',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_wind_onshore_installed_capacity_100re_el_capacity',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_wind_onshore_installed_capacity_100re_unit_count',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_wind_onshore_installed_capacity_2035_el_capacity',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AddField(
            model_name='mvgriddistrictdata',
            name='supply_wind_onshore_installed_capacity_2035_unit_count',
            field=models.FloatField(null=True, verbose_name=''),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='category',
            field=models.CharField(choices=[('demand', 'Demand'), ('supply', 'Supply'), ('grids', 'Grids'), ('model', 'Data Model')], default='demand', help_text='The main category in the left panel in the frontend.', max_length=16),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='choropleth_field',
            field=models.CharField(blank=True, help_text='The field that holds the data for the choropleth.', max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='colors',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, help_text='One ore multiple (for choropleths) colors for the display in the frontend.', null=True, size=None),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='description',
            field=models.CharField(blank=True, help_text='The description that can be found in the frontend, when clicking on the info-icon.', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='geom_layer',
            field=models.CharField(blank=True, help_text='The identifier of the layer that holds the geom.', max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='icon',
            field=models.CharField(blank=True, help_text='If an icon should be displayed.', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='identifier',
            field=models.CharField(help_text='Only used internally to be able to activte layer with javascript.', max_length=64),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='name',
            field=models.CharField(help_text='The name used for display in the frontend.', max_length=64),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='popup_description',
            field=models.CharField(blank=True, help_text="The description of the popup. Defaults to 'description'.", max_length=1024, null=True),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='popup_fields',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, help_text='The comma-seperated field(s), that should be displayed inside the popup.', null=True, size=None),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='popup_title',
            field=models.CharField(blank=True, help_text="The title of the popup. Defaults to 'name'.", max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='scenario',
            field=models.CharField(choices=[('2035', '2035'), ('100RE', '100RE'), ('both', 'both')], default='2035', help_text="Identifies the scenario. Use 'both' if there is no difference.", max_length=5),
        ),
        migrations.AlterField(
            model_name='maplayer',
            name='sub_category',
            field=models.CharField(blank=True, help_text='The sub-category for the display in the frontend.', max_length=64, null=True),
        ),
    ]
